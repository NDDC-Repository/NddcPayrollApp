@page "/runpayroll"


@using NddcPayrollLibrary.Data.Payroll;
@using NddcPayrollLibrary.Data.PayrollJournal;
@using NddcPayrollLibrary.Model.Payroll;
@inject IPayrollData payDb;
@inject IPayrollJournalData payjoDb;
@inject NavigationManager NavigationManager;


<div class="row">
    <div class="col-12">
        <div class="page-title-box d-sm-flex align-items-center justify-content-between">
            <h4 class="mb-sm-0">Run Payroll</h4>

            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="javascript: void(0);">Payroll</a></li>
                    <li class="breadcrumb-item active">Run Payroll</li>
                </ol>
            </div>

        </div>
    </div>
</div>
<EditForm Model="@JournalTitle" OnValidSubmit="ExecutePayroll">
    <DataAnnotationsValidator />
    @if (ShowAnim == true)
    {
        @*<div class="spinner-grow text-primary" role="status">
    <span>Loading Report Please Wait...</span>
    </div>*@
        <div class="text-center mb-3">
            <a href="javascript:void(0);" class="text-success"><i class="mdi mdi-loading mdi-spin fs-40 align-middle me-2"></i> Executing Payroll Please Wait </a>
        </div>
        @*<h4>@Message</h4>*@
    }

    @if (HideControl == false)
    {
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    @*<div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">New Bank</h4>
                </div>*@<!-- end card header -->
                    <div class="card-body">
                        @* <form>*@
                        <div class="row mb-3">
                            <div class="col-3">
                                <label class="form-label">Batch Name</label>
                            </div>

                            <div class="col-9">
                                <InputText class="form-control" @bind-Value="@JournalTitle.JournalName" placeholder="Enter Batch Name" />
                                <ValidationMessage For="() => JournalTitle.JournalName" />
                            </div>
                        </div>


                        <div class="row mb-3">
                            <div class="col-3">
                                <label class="form-label">Current Period</label>
                            </div>
                            <div class="col-9">
                                <input type="date" @bind="@JournalTitle.CurrentPeriod" class="form-control" id="exampleInputdate">
                            </div>
                        </div>

                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">Process Payroll</button>
                        </div>
                        @* </form>*@
                    </div>
                </div>
            </div>
            <!--end col-->
        </div>
    }

</EditForm>

@code {

    public MyPayrollJournalTitleModel JournalTitle = new();
    public bool ShowAnim { get; set; }
    public bool HideControl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        JournalTitle.CurrentPeriod = DateTime.Now;
    }

    private async Task ExecutePayroll()
    {
        ShowAnim = true;
        HideControl = true;

        await Task.Run(() => payjoDb.AddPayrollJournal(JournalTitle));
        ShowAnim = false;
        NavigationManager.NavigateTo("Payroll/RunPayroll", true);
    }

}
