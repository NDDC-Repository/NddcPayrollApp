@page "/runpayroll"
@using Syncfusion.Blazor.Grids
@using NddcPayrollLibrary.Data.Reports;
@using NddcPayrollLibrary.Model.Report;
@using Syncfusion.XlsIO;
@inject IReportsData db;
@using System.IO;
@inject Microsoft.JSInterop.IJSRuntime JS

<div class="card">
    <div class="card-body">
        <div class="row g-2">
            <div class="col-sm-4">
                <div class="search-box">
                    @*<input type="text" class="form-control" id="searchMemberList" placeholder="Search for name or designation...">
                    <i class="ri-search-line search-icon"></i>*@
                    <h4 class="fs-18 lh-base mb-0">Payroll Listings Report</h4>
                </div>
            </div>
            <!--end col-->
            <div class="col-sm-auto ms-auto">
                <div class="list-grid-nav hstack gap-1">
                    <button @onclick="GenerateReport" class="btn btn-primary addMembers-modal"><i class="ri-profile-line me-1 align-bottom"></i> Preview Listing</button>
                    <button @onclick="ExcelExport" class="btn btn-primary addMembers-modal"><i class="ri-profile-line me-1 align-bottom"></i> Export To Excel</button>
                    
                    @*<button type="button" id="dropdownMenuLink1" data-bs-toggle="dropdown" aria-expanded="false" class="btn btn-soft-info btn-icon fs-14"><i class="ri-more-2-fill"></i></button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink1" style="">
                        <li><a class="dropdown-item" href="#">Save Report</a></li>
                        <li><a class="dropdown-item" href="#">Post Journal</a></li>
                        <li><a class="dropdown-item" href="#">Retreive Saved Report</a></li>
                    </ul>*@

                </div>
            </div>
            <!--end col-->
        </div>
        <!--end row-->
    </div>
</div>

@if (ShowAnim == true)
{
    @*<div class="spinner-grow text-primary" role="status">
        <span>Loading Report Please Wait...</span>
    </div>*@
    <div class="text-center mb-3">
        <a href="javascript:void(0);" class="text-success"><i class="mdi mdi-loading mdi-spin fs-40 align-middle me-2"></i> Generating Report Please Wait </a>
    </div>
    @*<h4>@Message</h4>*@
}
else if (ShowGrid == true)
{

    <p>Time Elasped: @OpsTime Seconds</p>
    <SfGrid @ref="SfEmployeeGrid" DataSource="PayrollList" AllowResizing="true" EnableVirtualization="true" ShowColumnChooser="true" EnableHeaderFocus="true" Height="600" AllowExcelExport="true" AllowPaging="true" AllowFiltering="true" AllowSorting="true" AllowGrouping="true" Toolbar="@toolbar">
        <GridPageSettings PageSize="50" PageSizes="@(new string[] { "20", "50", "100", "200", "500", "All" })"></GridPageSettings>
        <GridAggregates>
            <GridAggregate>
                <GridAggregateColumns>

                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.BasicSalary) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.Arreas) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                     <GridAggregateColumn Field=@nameof(MyPayRollListModel.LeaveAllow) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.TransportAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.HousingAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.FurnitureAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.MealAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.UtilityAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.EducationAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.SecurityAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.DomesticServantAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.MedicalAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.DriversAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.VehicleMaintenanceAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.HazardAllowance) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.EntertainmentAllow) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.NewspaperAllow) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.SecretarialAllow) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.TaxDeduction) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.NHFDeduction) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.PensionDeduction) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.VoluntaryPension) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.JSADeduction) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.CooperativeDed) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.SSADeduction) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.TotalEarnings) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.TotalDeductions) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                    <GridAggregateColumn Field=@nameof(MyPayRollListModel.NetPay) Type="AggregateType.Sum" Format="N">
                        <FooterTemplate>
                            @{
                                var aggregate = (context as AggregateTemplateContext);
                                <div>
                                    <p>@aggregate.Sum</p>
                                </div>
                            }
                        </FooterTemplate>
                    </GridAggregateColumn>
                </GridAggregateColumns>

            </GridAggregate>
        </GridAggregates>

        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
        <GridEvents OnToolbarClick="ToolbarBtnClickHandler" TValue="MyPayRollListModel"></GridEvents>

        <GridColumns>
            <GridColumn HeaderText="S/N" IsFrozen="true" Width="50" Field="@nameof(MyPayRollListModel.SrNo)"></GridColumn>
            <GridColumn HeaderText="Code" Width="100" IsFrozen="true" Field="@nameof(MyPayRollListModel.EmployeeCode)"></GridColumn>
            <GridColumn HeaderText="Last Name" IsFrozen="true" Width="120" Field="@nameof(MyPayRollListModel.LastName)"></GridColumn>
            <GridColumn HeaderText="First Name" IsFrozen="true" Width="120" Field="@nameof(MyPayRollListModel.FirstName)"></GridColumn>
            <GridColumn HeaderText="Grade Level" IsFrozen="true" Width="120" Field="@nameof(MyPayRollListModel.GradeLevel)"></GridColumn>
            <GridColumn HeaderText="Department" Field="@nameof(MyPayRollListModel.DepartmentName)"></GridColumn>
            <GridColumn HeaderText="Category" Width="120" Field="@nameof(MyPayRollListModel.Category)"></GridColumn>
            <GridColumn HeaderText="Basic Salary" Width="120" Format="N" Field="@nameof(MyPayRollListModel.BasicSalary)"></GridColumn>
            <GridColumn HeaderText="Salary Arrears" Width="120" Format="N" Field="@nameof(MyPayRollListModel.Arreas)"></GridColumn>
            <GridColumn HeaderText="Leave Allowance" Width="120" Format="N" Field="@nameof(MyPayRollListModel.LeaveAllow)"></GridColumn>
            <GridColumn HeaderText="Transport Allowance" Format="N" Width="120" Field="@nameof(MyPayRollListModel.TransportAllowance)"></GridColumn>
            <GridColumn HeaderText="Housing Allowance" Format="N" Width="120" Field="@nameof(MyPayRollListModel.HousingAllowance)"></GridColumn>
            <GridColumn HeaderText="Furniture Allowance" Format="N" Width="120" Field="@nameof(MyPayRollListModel.FurnitureAllowance)"></GridColumn>
            <GridColumn HeaderText="Meal Allowance" Width="120" Format="N" Field="@nameof(MyPayRollListModel.MealAllowance)"></GridColumn>
            <GridColumn HeaderText="Utility Allowance" Format="N" Width="120" Field="@nameof(MyPayRollListModel.UtilityAllowance)"></GridColumn>
            <GridColumn HeaderText="Education Allowance" Format="N" Width="120" Field="@nameof(MyPayRollListModel.EducationAllowance)"></GridColumn>
            <GridColumn HeaderText="Security Allowance" Format="N" Width="120" Field="@nameof(MyPayRollListModel.SecurityAllowance)"></GridColumn>
            <GridColumn HeaderText="Domestic Servant Allowance" Format="N" Width="120" Field="@nameof(MyPayRollListModel.DomesticServantAllowance)"></GridColumn>
            <GridColumn HeaderText="Medical Allowance" Width="120" Format="N" Field="@nameof(MyPayRollListModel.MedicalAllowance)"></GridColumn>
            <GridColumn HeaderText="Driver Allowance" Width="120" Format="N" Field="@nameof(MyPayRollListModel.DriversAllowance)"></GridColumn>
            <GridColumn HeaderText="Vehicle Allowance" Width="120" Format="N" Field="@nameof(MyPayRollListModel.VehicleMaintenanceAllowance)"></GridColumn>
            <GridColumn HeaderText="Hazard Allowance" Width="120" Format="N" Field="@nameof(MyPayRollListModel.HazardAllowance)"></GridColumn>
            <GridColumn HeaderText="Entertainment Allowance" Width="120" Format="N" Field="@nameof(MyPayRollListModel.EntertainmentAllow)"></GridColumn>
            <GridColumn HeaderText="NewsPaper Allowance" Width="120" Format="N" Field="@nameof(MyPayRollListModel.NewspaperAllow)"></GridColumn>
            <GridColumn HeaderText="Secretarial Allowance" Width="120" Format="N" Field="@nameof(MyPayRollListModel.SecretarialAllow)"></GridColumn>
            <GridColumn HeaderText="Tax" Width="120" Format="N" Field="@nameof(MyPayRollListModel.TaxDeduction)"></GridColumn>
            <GridColumn HeaderText="NHF" Width="120" Field="@nameof(MyPayRollListModel.NHFDeduction)"></GridColumn>
            <GridColumn HeaderText="Pension" Width="120" Format="N" Field="@nameof(MyPayRollListModel.PensionDeduction)"></GridColumn>
            <GridColumn HeaderText="Voluntary Pension" Width="120" Format="N" Field="@nameof(MyPayRollListModel.VoluntaryPension)"></GridColumn>
            <GridColumn HeaderText="JSA" Width="120" Format="N" Field="@nameof(MyPayRollListModel.JSADeduction)"></GridColumn>
            <GridColumn HeaderText="Cooperative" Width="120" Format="N" Field="@nameof(MyPayRollListModel.CooperativeDed)"></GridColumn>
            <GridColumn HeaderText="SSA" Width="120" Format="N" Field="@nameof(MyPayRollListModel.SSADeduction)"></GridColumn>
            <GridColumn HeaderText="Total Earnings" Format="N" Width="120" Field="@nameof(MyPayRollListModel.TotalEarnings)"></GridColumn>
            <GridColumn HeaderText="Total Deductions" Format="N" Width="120" Field="@nameof(MyPayRollListModel.TotalDeductions)"></GridColumn>
            <GridColumn HeaderText="Net Pay" Width="120" Format="N" Field="@nameof(MyPayRollListModel.NetPay)"></GridColumn>
        </GridColumns>
    </SfGrid>
}

@code {

    public string Message { get; set; }
    public List<MyPayRollListModel> PayrollList { get; set; }

    private List<object> toolbar = new List<object> { "Search", "ExcelExport", "ColumnChooser" };
    private SfGrid<MyPayRollListModel>? SfEmployeeGrid { get; set; }

    //protected override async Task OnInitializedAsync()
    //{
    //    //PayrollList = db.GetPayrollListReport();
    //    //Message = "";
    //    //Message = "Loading Report Please Wait ........";
    //    PayrollList = await Task.Run(() => db.GetPayrollListReport());

    //}
    public async void ToolbarBtnClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id.Contains("_excelexport"))
        {
            await SfEmployeeGrid.ExportToExcelAsync();

        }
        else if (args.Item.Id.Contains("_pdfexport"))
        {
            await SfEmployeeGrid.ExportToPdfAsync();
        }
        else if (args.Item.Id == "XmlExport")
        {
            Console.Write("Export to Xml functionality");
        }
    }
    public double OpsTime { get; set; }
    public bool ShowAnim { get; set; }
    public bool ShowGrid { get; set; }
    private async Task GenerateReport()
    {
        ShowAnim = true;
        var watch = System.Diagnostics.Stopwatch.StartNew();
        Message = "Loading Report Please Wait ........";
        PayrollList = await Task.Run(() => db.GetPayrollListReport2Async());
        //Message = "";
        watch.Stop();
        OpsTime = watch.ElapsedMilliseconds / 1000;
        ShowAnim = false;
        ShowGrid = true;
    }

    private async Task ExcelExport()
    {
        using (ExcelEngine excelEngine = new ExcelEngine())
        {
            IApplication application = excelEngine.Excel;
            application.DefaultVersion = ExcelVersion.Excel2013;
            IWorkbook workbook = application.Workbooks.Create(1);
            IWorksheet worksheet = workbook.Worksheets[0];

            //Import the data to worksheet
            PayrollList = await Task.Run(() => db.GetPayrollListReport2Async());
            worksheet.ImportData(PayrollList, 2, 1, false);

            //Saving the workbook as stream
            FileStream stream = new FileStream("ImportFromDT.xlsx", FileMode.Create, FileAccess.ReadWrite);
            //workbook.SaveAs(stream);

            await JS.InvokeVoidAsync("downloadFileFromStream", "test.xlsx", stream);
            
            stream.Dispose();
        }
    }

}
